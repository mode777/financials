@using Finances.Mvc.Controllers
@model IEnumerable<Finances.Mvc.Data.AccountItem>

@{
    ViewData["Title"] = "Konto";
}

<h1>Konto</h1>

<p>
    <button id="btn-sync" class="btn btn-primary float-right">Sync</button>
</p>

<table id="example" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Date</th>
            <th>Type</th>
            <th>Amount</th>
        </tr>
    </thead>
</table>

@section styles {
    <link rel="stylesheet" type="text/css" href="~/css/datatables.min.css" />
    <style>
        td {
            font-size: small;
        }
        .column-amount {
            text-align: right;
            font-weight: bold;
        }
    </style>
}

@section scripts {
    <script type="text/javascript" src="~/js/datatables.min.js"></script>
    <script>
        $(document).ready(function () {

            bindTransaction($('#btn-sync'));

            $('#example').DataTable({
                ajax: {
                    url: "@Url.Action("Data")",
                    dataSrc: ""
                },
                order: [],
                columns: [
                    null,
                    null,
                    { width: "50px" },
                    null,
                    { className: "column-amount" }
                ]
            } );
        });
            
        async function bindTransaction(btn) {
            btn.click(async e => {
                btn.attr('disabled', true);
                const response = await fetch('@Url.Action(nameof(TransactionsController.Sync), "Transactions")', {
                    method: "POST",
                    credentials: "include"
                });
                let transaction = await response.json();
                while (transaction.status === 'tan_required') {
                    const tan = prompt("Please enter TAN:");
                    const response = await fetch('@Url.Action(nameof(TransactionsController.Complete), "Transactions")', {
                        method: 'POST',
                        credentials: 'include',
                        headers: {
                          'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            connectionId: transaction.connectionId,
                            tan: tan
                        })
                    })
                    transaction = await response.json()
                }
                console.log(status);
                btn.attr('disabled', false);
            })
        }

    </script>
}

